spring.application.name=buns.api

spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

spring.jpa.show-sql=true

# this controls whether to initialize DB using JPA, 'spring.jpa.hibernate.ddl-auto' precises the setting
spring.jpa.generate-ddl=false

# setting this to 'update' makes JPA create schema programatically (no need for vendor specific SQLs), in additive manner (no deleting)
# setting it to 'create-drop' will make JPA re-create the DB and also execute 'import.sql' file
# good for DEV, but PROD should rather use 'validate' or 'none'
spring.jpa.hibernate.ddl-auto=validate

# this setting is separate from JPA setting above, https://docs.spring.io/spring-boot/docs/1.1.0.M1/reference/html/howto-database-initialization.html
# setting this to 'always' makes Spring JDBC execute 'schema.sql' and 'data.sql' scripts on start-up, even if detected DB is not embedded
# it is good for DEV, but needs to be disabled for PROD
spring.sql.init.mode=always

# prevent early database interaction for non-embedded DB interaction
# https://github.com/spring-projects/spring-lifecycle-smoke-tests/tree/main/data/data-jpa
spring.jpa.properties.hibernate.boot.allow_jdbc_metadata_access=false

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect



